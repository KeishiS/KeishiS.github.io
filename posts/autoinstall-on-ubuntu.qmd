---
title: "UbuntuでAutoinstall"
description: "subiquityの自動インストール機能でyamlファイルからプロビジョニング"
author: "KeishiS"
date: "2024-08-20T20:00:00"
categories: [computer]
image: "../../assets/computer.png"
---

## 導入

プライベートではArchLinuxとNixOSしか使ってないので， `configuration.nix` に書くかゴリゴリにシェルスクリプト書くかでプロビジョニングしています．
しかし最近，作業場というか遊び場というか仕事場的な環境で動いているLinuxサーバを気にすることがあり，将来的には設定内容をファイルへ書き出せる状態にしたいと思いました．
というのも，あるあるな事例ですが，別にサーバ運用は本業ではないので担当者が片手間で設定を継ぎ足してきた結果，全容把握が大変な状況になってきちゃいました．

現状のコード化も追々やるとして，近々クラスタに新たなマシンを加えたいため，これのプロビジョニングと環境構築をすべてコード化したいと思っており，
この記事はそのために情報収集した一部を整理した内容となっています．

## 本記事で触れる事

上記の命題は多くの組織が直面する問題のため，数多くの対処方法がネット上に公開されています．
問題はその中から，組織やシステム規模・予算・将来的な管理者の負担等を加味した上で，自分たちにベターな選択肢を選ぶことにあります．
その上で本記事では，

* 対象は物理サーバで
* 金銭的追加予算はなく
* 管理者は一定のLinux知識を有し
* 現状をコードに書き出すための1stステップ

という前提であるとします．その上で，

* subiquityのautoinstallを使い，Ansibleでアクセス可能な環境をyamlファイルからプロビジョニングし
* Ansibleを使って詳細なセッティングを行う

という手順について言及します．このうち後者についてはネット上に十分情報があるため，
本記事では主に前者の手順について調べた結果を紹介します．

## 動作環境

最終的なプロビジョニング先は物理サーバですが，色々試行錯誤する用途として物理サーバは利便性が悪いです．そのため，

* VirtualBox上で実験し
* 最終的に物理サーバ

という流れで説明します．一応，詳細なバージョンもまとめておくと以下のとおりです．

* ホストOS: ArchLinux, kernel: 6.10.6-arch1-1
    * VirtualBox 7.0.20
* ゲストOS: Ubuntu-server 24.04
* 物理サーバ役: xxxx
    * DHCPでIPアドレスが降ってくるLAN環境

## SubiquityのAutoinstallについて

## VirtualBoxでの動作確認

## 物理サーバへのインストール

##

:::{.callout-note}
### 小まとめ

hoge
:::

## まとめと雑談

という感じでUbuntuでIaCするための1st Stepをまとめましたが，個人的にはNixOSの方が好みです．
ただ他の人へ引き継ぐことを考えると選択肢に挙げにくい現状で悲しいです．AnsibleでなくPuppetを使えば
宣言的なセットアップができるのかもしれないですが，触ってこなかったので当面は放置になりそうです．
